# =============================================================================
# Docker Compose for Tavira App
# Local development and testing environment
# Simulates Kubernetes sidecar architecture
# =============================================================================

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: tavira-postgres
    environment:
      POSTGRES_DB: tavira
      POSTGRES_USER: tavira_user
      POSTGRES_PASSWORD: tavira_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tavira_user -d tavira"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tavira-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tavira-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - tavira-network

  # PHP-FPM Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: vendor  # Use vendor stage for development
    container_name: tavira-app
    environment:
      APP_NAME: Tavira
      APP_ENV: local
      APP_DEBUG: "true"
      APP_KEY: base64:your-app-key-here
      APP_URL: http://localhost

      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: tavira
      DB_USERNAME: tavira_user
      DB_PASSWORD: tavira_password

      CACHE_DRIVER: redis
      REDIS_HOST: redis
      REDIS_PORT: 6379

      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis
      SESSION_LIFETIME: 120
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9000 || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    networks:
      - tavira-network

  # NGINX Web Server
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: tavira-nginx
    ports:
      - "8080:80"
    volumes:
      - ./storage:/var/www/html/storage:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - tavira-network

  # Queue Worker (Optional)
  queue:
    build:
      context: .
      dockerfile: Dockerfile
      target: vendor
    container_name: tavira-queue
    command: php artisan queue:work --sleep=3 --tries=3
    environment:
      APP_NAME: Tavira
      APP_ENV: local
      APP_DEBUG: "true"
      APP_KEY: base64:your-app-key-here

      DB_CONNECTION: pgsql
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: tavira
      DB_USERNAME: tavira_user
      DB_PASSWORD: tavira_password

      CACHE_DRIVER: redis
      REDIS_HOST: redis
      REDIS_PORT: 6379

      QUEUE_CONNECTION: redis
    volumes:
      - ./storage:/var/www/html/storage
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      app:
        condition: service_started
    restart: unless-stopped
    networks:
      - tavira-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  tavira-network:
    driver: bridge
