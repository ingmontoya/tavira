apiVersion: batch/v1
kind: CronJob
metadata:
  name: tavira-scheduler
  namespace: default
  labels:
    app: tavira-scheduler
    version: v1
spec:
  # Ejecuta cada minuto (como lo hace Laravel scheduler)
  schedule: "* * * * *"

  # Política de concurrencia: Forbid evita que se ejecuten múltiples instancias simultáneamente
  concurrencyPolicy: Forbid

  # Límites de historial
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3

  # Configuración del Job
  jobTemplate:
    spec:
      # No reintentar si falla, el siguiente minuto se ejecutará de nuevo
      backoffLimit: 0

      # TTL después de finalizar (limpieza automática)
      ttlSecondsAfterFinished: 300

      template:
        metadata:
          labels:
            app: tavira-scheduler
            version: v1
        spec:
          # No reiniciar el pod si termina
          restartPolicy: Never

          # Init container para copiar el código
          initContainers:
          - name: copy-app
            image: ingmontoyav/tavira-app:latest
            imagePullPolicy: Always
            command:
            - sh
            - -c
            - |
              cp -r /var/www/html/* /app-code/
              mkdir -p /app-code/storage/app/public
              mkdir -p /app-code/storage/framework/cache
              mkdir -p /app-code/storage/framework/sessions
              mkdir -p /app-code/storage/framework/views
              mkdir -p /app-code/storage/logs
              chmod -R 775 /app-code/storage
              chmod -R 775 /app-code/bootstrap/cache
            securityContext:
              runAsUser: 0
              runAsGroup: 0
            volumeMounts:
            - name: app-code
              mountPath: /app-code

          containers:
          - name: scheduler
            image: ingmontoyav/tavira-app:latest
            imagePullPolicy: Always

            # Comando para ejecutar el scheduler
            command: ["php"]
            args:
              - "artisan"
              - "schedule:run"
              - "--verbose"

            # Variables de entorno (mismas que el deployment principal)
            env:
            - name: APP_NAME
              value: Tavira
            - name: APP_ENV
              value: production
            - name: APP_DEBUG
              value: "false"
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: APP_KEY
            - name: APP_URL
              value: https://tavira.com.co
            - name: DB_CONNECTION
              value: pgsql
            - name: DB_HOST
              value: postgres
            - name: DB_PORT
              value: "5432"
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: DB_DATABASE
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: DB_PASSWORD
            - name: CACHE_DRIVER
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: CACHE_DRIVER
                  optional: true
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: REDIS_HOST
                  optional: true
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: REDIS_PORT
                  optional: true
            - name: QUEUE_CONNECTION
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: QUEUE_CONNECTION
                  optional: true

            # Cargar todas las variables del secret
            envFrom:
            - secretRef:
                name: laravel-env

            # Recursos (más livianos que los workers)
            resources:
              requests:
                memory: "128Mi"
                cpu: "50m"
              limits:
                memory: "256Mi"
                cpu: "200m"

            # Security context
            securityContext:
              runAsUser: 82
              runAsGroup: 82
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false

            # Volúmenes
            volumeMounts:
            - name: app-code
              mountPath: /var/www/html
            - name: app-storage
              mountPath: /var/www/html/storage

          # Security context del pod
          securityContext:
            fsGroup: 82

          # Volúmenes compartidos
          volumes:
          - name: app-code
            emptyDir: {}
          - name: app-storage
            persistentVolumeClaim:
              claimName: tavira-storage-pvc
