apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "34"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"tavira","version":"v1"},"name":"tavira-app","namespace":"default"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"tavira"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":0},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"tavira","version":"v1"}},"spec":{"containers":[{"env":[{"name":"APP_NAME","value":"Tavira"},{"name":"APP_ENV","value":"production"},{"name":"APP_DEBUG","value":"false"},{"name":"APP_KEY","valueFrom":{"secretKeyRef":{"key":"APP_KEY","name":"laravel-env"}}},{"name":"APP_URL","value":"https://tavira.com.co"},{"name":"DB_CONNECTION","value":"pgsql"},{"name":"DB_HOST","value":"postgres"},{"name":"DB_PORT","value":"5432"},{"name":"DB_DATABASE","valueFrom":{"secretKeyRef":{"key":"DB_DATABASE","name":"laravel-env"}}},{"name":"DB_USERNAME","valueFrom":{"secretKeyRef":{"key":"DB_USERNAME","name":"laravel-env"}}},{"name":"DB_PASSWORD","valueFrom":{"secretKeyRef":{"key":"DB_PASSWORD","name":"laravel-env"}}},{"name":"CACHE_DRIVER","valueFrom":{"secretKeyRef":{"key":"CACHE_DRIVER","name":"laravel-env","optional":true}}},{"name":"REDIS_HOST","valueFrom":{"secretKeyRef":{"key":"REDIS_HOST","name":"laravel-env","optional":true}}},{"name":"REDIS_PORT","valueFrom":{"secretKeyRef":{"key":"REDIS_PORT","name":"laravel-env","optional":true}}},{"name":"QUEUE_CONNECTION","valueFrom":{"secretKeyRef":{"key":"QUEUE_CONNECTION","name":"laravel-env","optional":true}}},{"name":"SESSION_DRIVER","valueFrom":{"secretKeyRef":{"key":"SESSION_DRIVER","name":"laravel-env","optional":true}}},{"name":"SESSION_LIFETIME","value":"120"}],"image":"ingmontoyav/tavira-app:latest","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"initialDelaySeconds":30,"periodSeconds":10,"tcpSocket":{"port":9000},"timeoutSeconds":5},"name":"php-fpm","ports":[{"containerPort":9000,"name":"php-fpm","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"initialDelaySeconds":10,"periodSeconds":5,"tcpSocket":{"port":9000},"timeoutSeconds":3},"resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"100m","memory":"256Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":false,"runAsGroup":82,"runAsUser":82},"volumeMounts":[{"mountPath":"/var/www/html","name":"app-code"},{"mountPath":"/var/www/html/storage","name":"app-storage"}]},{"image":"nginx:1.26-alpine","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/health","port":80},"initialDelaySeconds":10,"periodSeconds":10,"timeoutSeconds":3},"name":"nginx","ports":[{"containerPort":80,"name":"http","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/health","port":80},"initialDelaySeconds":5,"periodSeconds":5,"timeoutSeconds":2},"resources":{"limits":{"cpu":"200m","memory":"128Mi"},"requests":{"cpu":"50m","memory":"64Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"readOnlyRootFilesystem":true,"runAsGroup":101,"runAsUser":101},"volumeMounts":[{"mountPath":"/var/www/html","name":"app-code","readOnly":true},{"mountPath":"/etc/nginx/conf.d","name":"nginx-config","readOnly":true},{"mountPath":"/var/cache/nginx","name":"nginx-cache"},{"mountPath":"/var/run","name":"nginx-run"}]}],"initContainers":[{"command":["sh","-c","cp -r /var/www/html/* /app-code/\nmkdir -p /app-code/storage/app/public\nmkdir -p /app-code/storage/framework/cache\nmkdir -p /app-code/storage/framework/sessions\nmkdir -p /app-code/storage/framework/views\nmkdir -p /app-code/storage/logs\nchmod -R 775 /app-code/storage\nchmod -R 775 /app-code/bootstrap/cache\n"],"image":"ingmontoyav/tavira-app:latest","imagePullPolicy":"Always","name":"copy-app","securityContext":{"runAsGroup":0,"runAsUser":0},"volumeMounts":[{"mountPath":"/app-code","name":"app-code"}]}],"securityContext":{"fsGroup":82},"volumes":[{"emptyDir":{},"name":"app-code"},{"name":"app-storage","persistentVolumeClaim":{"claimName":"tavira-storage-pvc"}},{"configMap":{"name":"tavira-nginx-config"},"name":"nginx-config"},{"emptyDir":{},"name":"nginx-cache"},{"emptyDir":{},"name":"nginx-run"}]}}}}
    kubernetes.io/change-cause: kubectl set image deployment/tavira-app php-fpm=ingmontoyav/tavira-app:v20251025-dedce33
      --record=true
  creationTimestamp: "2025-10-25T14:14:53Z"
  generation: 34
  labels:
    app: tavira
    version: v1
  name: tavira-app
  namespace: default
  resourceVersion: "147266"
  uid: 27fe4dfe-e54f-4dc2-b45e-567c713419bc
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: tavira
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-10-27T09:02:27-05:00"
      creationTimestamp: null
      labels:
        app: tavira
        version: v1
    spec:
      containers:
      - env:
        - name: APP_NAME
          value: Tavira
        - name: APP_ENV
          value: production
        - name: APP_DEBUG
          value: "false"
        - name: APP_KEY
          valueFrom:
            secretKeyRef:
              key: APP_KEY
              name: laravel-env
        - name: APP_URL
          value: https://tavira.com.co
        - name: DB_CONNECTION
          value: pgsql
        - name: DB_HOST
          value: postgres
        - name: DB_PORT
          value: "5432"
        - name: DB_DATABASE
          valueFrom:
            secretKeyRef:
              key: DB_DATABASE
              name: laravel-env
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              key: DB_USERNAME
              name: laravel-env
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: DB_PASSWORD
              name: laravel-env
        - name: CACHE_DRIVER
          valueFrom:
            secretKeyRef:
              key: CACHE_DRIVER
              name: laravel-env
              optional: true
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              key: REDIS_HOST
              name: laravel-env
              optional: true
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              key: REDIS_PORT
              name: laravel-env
              optional: true
        - name: QUEUE_CONNECTION
          valueFrom:
            secretKeyRef:
              key: QUEUE_CONNECTION
              name: laravel-env
              optional: true
        - name: SESSION_DRIVER
          valueFrom:
            secretKeyRef:
              key: SESSION_DRIVER
              name: laravel-env
              optional: true
        - name: SESSION_LIFETIME
          value: "120"
        envFrom:
        - secretRef:
            name: laravel-env
        image: ingmontoyav/tavira-app:v20251027-cf6bafe
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 9000
          timeoutSeconds: 5
        name: php-fpm
        ports:
        - containerPort: 9000
          name: php-fpm
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 9000
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsGroup: 82
          runAsUser: 82
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/www/html
          name: app-code
        - mountPath: /var/www/html/storage
          name: app-storage
      - image: nginx:1.26-alpine
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        name: nginx
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsGroup: 101
          runAsUser: 101
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/www/html
          name: app-code
          readOnly: true
        - mountPath: /etc/nginx/conf.d
          name: nginx-config
          readOnly: true
        - mountPath: /var/cache/nginx
          name: nginx-cache
        - mountPath: /var/run
          name: nginx-run
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - |
          cp -r /var/www/html/* /app-code/
          mkdir -p /app-code/storage/app/public
          mkdir -p /app-code/storage/framework/cache
          mkdir -p /app-code/storage/framework/sessions
          mkdir -p /app-code/storage/framework/views
          mkdir -p /app-code/storage/logs
          chmod -R 775 /app-code/storage
          chmod -R 775 /app-code/bootstrap/cache
        image: ingmontoyav/tavira-app:latest
        imagePullPolicy: Always
        name: copy-app
        resources: {}
        securityContext:
          runAsGroup: 0
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app-code
          name: app-code
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 82
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: app-code
      - name: app-storage
        persistentVolumeClaim:
          claimName: tavira-storage-pvc
      - configMap:
          defaultMode: 420
          name: tavira-nginx-config
        name: nginx-config
      - emptyDir: {}
        name: nginx-cache
      - emptyDir: {}
        name: nginx-run
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: "2025-10-25T14:45:15Z"
    lastUpdateTime: "2025-10-25T14:45:15Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-10-25T14:43:47Z"
    lastUpdateTime: "2025-10-27T15:13:54Z"
    message: ReplicaSet "tavira-app-7f6c849787" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 34
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
