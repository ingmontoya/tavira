apiVersion: apps/v1
kind: Deployment
metadata:
  name: tavira-app
  labels:
    app: tavira
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tavira
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: tavira
        version: v1
    spec:
      securityContext:
        fsGroup: 82

      initContainers:
        - name: copy-app
          image: ingmontoyav/tavira-app:latest
          imagePullPolicy: Always
          command:
            - sh
            - -c
            - |
              cp -r /var/www/html/* /app-code/
              mkdir -p /app-code/storage/app/public
              mkdir -p /app-code/storage/framework/cache
              mkdir -p /app-code/storage/framework/sessions
              mkdir -p /app-code/storage/framework/views
              mkdir -p /app-code/storage/logs
              chmod -R 775 /app-code/storage
              chmod -R 775 /app-code/bootstrap/cache
          volumeMounts:
            - name: app-code
              mountPath: /app-code
          securityContext:
            runAsUser: 0
            runAsGroup: 0

      containers:
        - name: php-fpm
          image: ingmontoyav/tavira-app:latest
          imagePullPolicy: Always
          ports:
            - name: php-fpm
              containerPort: 9000
              protocol: TCP
          env:
            - name: APP_NAME
              value: "Tavira"
            - name: APP_ENV
              value: "production"
            - name: APP_DEBUG
              value: "false"
            - name: APP_KEY
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: APP_KEY
            - name: APP_URL
              value: "https://tavira.com.co"
            - name: DB_CONNECTION
              value: "pgsql"
            - name: DB_HOST
              value: "postgres"
            - name: DB_PORT
              value: "5432"
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: DB_DATABASE
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: DB_PASSWORD
            - name: CACHE_DRIVER
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: CACHE_DRIVER
                  optional: true
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: REDIS_HOST
                  optional: true
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: REDIS_PORT
                  optional: true
            - name: QUEUE_CONNECTION
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: QUEUE_CONNECTION
                  optional: true
            - name: SESSION_DRIVER
              valueFrom:
                secretKeyRef:
                  name: laravel-env
                  key: SESSION_DRIVER
                  optional: true
            - name: SESSION_LIFETIME
              value: "120"
          volumeMounts:
            - name: app-code
              mountPath: /var/www/html
            - name: app-storage
              mountPath: /var/www/html/storage
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          securityContext:
            runAsUser: 82
            runAsGroup: 82
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
          livenessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3

        - name: nginx
          image: nginx:1.26-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: app-code
              mountPath: /var/www/html
              readOnly: true
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
              readOnly: true
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "200m"
              memory: "128Mi"
          securityContext:
            runAsUser: 101
            runAsGroup: 101
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3

      volumes:
        - name: app-code
          emptyDir: {}
        - name: app-storage
          persistentVolumeClaim:
            claimName: tavira-storage-pvc
        - name: nginx-config
          configMap:
            name: tavira-nginx-config
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
