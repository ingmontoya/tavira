name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_IMAGE_PHP: ingmontoyav/tavira-app
  DOCKER_IMAGE_NUXT: ingmontoyav/tavira-nuxt
  DEPLOYMENT_NAME: tavira-app
  K8S_NAMESPACE: default

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 1Ô∏è‚É£ Checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3Ô∏è‚É£ Login Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4Ô∏è‚É£ Extract version
      - name: Extract version from commit
        id: version
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "tag=v$(date +%Y%m%d)-${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT

      # 5Ô∏è‚É£ Build & push PHP/FPM image
      - name: Build & Push PHP Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./docker
          file: ./docker/Dockerfile.php
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_PHP }}:latest
            ${{ env.DOCKER_IMAGE_PHP }}:${{ steps.version.outputs.tag }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_PHP }}:latest
          cache-to: type=inline

      # 6Ô∏è‚É£ Build & push Nuxt image
      - name: Build & Push Nuxt Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NUXT }}:latest
            ${{ env.DOCKER_IMAGE_NUXT }}:${{ steps.version.outputs.tag }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_NUXT }}:latest
          cache-to: type=inline

      # 7Ô∏è‚É£ Setup kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Verify cluster connection
        run: |
          kubectl version --client
          kubectl cluster-info
          kubectl get nodes

      # 8Ô∏è‚É£ Update deployment image
      - name: Update deployment image
        run: |
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} \
            php-fpm=${{ env.DOCKER_IMAGE_PHP }}:${{ steps.version.outputs.tag }} \
            -n ${{ env.K8S_NAMESPACE }} --record

      - name: Wait for rollout to complete
        run: |
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} -n ${{ env.K8S_NAMESPACE }} --timeout=10m

      # 9Ô∏è‚É£ Post-deployment tasks (Laravel + Tenants)
      - name: Run Laravel post-deploy tasks
        run: |
          POD=$(kubectl get pods -n ${{ env.K8S_NAMESPACE }} -l app=${{ env.DEPLOYMENT_NAME }} -o jsonpath='{.items[0].metadata.name}')

          echo "‚úÖ Clearing caches..."
          kubectl exec -n ${{ env.K8S_NAMESPACE }} $POD -c php-fpm -- php artisan config:clear
          kubectl exec -n ${{ env.K8S_NAMESPACE }} $POD -c php-fpm -- php artisan config:cache
          kubectl exec -n ${{ env.K8S_NAMESPACE }} $POD -c php-fpm -- php artisan route:cache
          kubectl exec -n ${{ env.K8S_NAMESPACE }} $POD -c php-fpm -- php artisan view:cache

          echo "‚úÖ Running main migrations..."
          kubectl exec -n ${{ env.K8S_NAMESPACE }} $POD -c php-fpm -- php artisan migrate --force

          echo "‚úÖ Running tenants migrations..."
          kubectl exec -n ${{ env.K8S_NAMESPACE }} $POD -c php-fpm -- php artisan tenants:migrate --force

      # üîü Verify deployment
      - name: Verify deployment
        run: |
          kubectl get pods -n ${{ env.K8S_NAMESPACE }} -l app=${{ env.DEPLOYMENT_NAME }}
          kubectl get deployment ${{ env.DEPLOYMENT_NAME }} -n ${{ env.K8S_NAMESPACE }}

      # 1Ô∏è‚É£1Ô∏è‚É£ Notifications
      - name: Notify on failure
        if: failure()
        run: |
          echo "‚ùå Deployment failed! Check the logs above."
          POD=$(kubectl get pods -n ${{ env.K8S_NAMESPACE }} -l app=${{ env.DEPLOYMENT_NAME }} -o jsonpath='{.items[0].metadata.name}')
          kubectl logs -n ${{ env.K8S_NAMESPACE }} $POD -c php-fpm --tail=50 || true

      - name: Notify on success
        if: success()
        run: |
          echo "‚úÖ Deployment successful!"
          echo "Version deployed: ${{ steps.version.outputs.tag }}"
          echo "PHP Image: ${{ env.DOCKER_IMAGE_PHP }}:${{ steps.version.outputs.tag }}"
          echo "Nuxt Image: ${{ env.DOCKER_IMAGE_NUXT }}:${{ steps.version.outputs.tag }}"
