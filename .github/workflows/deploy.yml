name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_IMAGE_PHP: ingmontoyav/tavira-app
  DOCKER_IMAGE_NUXT: ingmontoyav/tavira-nuxt
  DEPLOYMENT_NAME: tavira-app
  K8S_NAMESPACE: default

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      # 1Ô∏è‚É£ Checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3Ô∏è‚É£ Login Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4Ô∏è‚É£ Extract version
      - name: Extract version from commit
        id: version
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "tag=v$(date +%Y%m%d)-${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT

      # 5Ô∏è‚É£ Build & push PHP/FPM image
      - name: Build & Push PHP Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile.php
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_PHP }}:latest
            ${{ env.DOCKER_IMAGE_PHP }}:${{ steps.version.outputs.tag }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_PHP }}:latest
          cache-to: type=inline

      # 6Ô∏è‚É£ Build & push Nuxt image
      - name: Build & Push Nuxt Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NUXT }}:latest
            ${{ env.DOCKER_IMAGE_NUXT }}:${{ steps.version.outputs.tag }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_NUXT }}:latest
          cache-to: type=inline

      # 7Ô∏è‚É£ Configure kubectl
      - name: Set up kubectl
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      # 8Ô∏è‚É£ Verify cluster connection
      - name: Verify cluster connection
        run: |
          echo "üîç Checking cluster connection..."
          kubectl cluster-info
          kubectl get nodes
          echo "‚úÖ Connected to cluster"

      # 9Ô∏è‚É£ Update deployment
      - name: Update Kubernetes deployment
        run: |
          echo "üîÑ Updating deployment to ${{ steps.version.outputs.tag }}..."
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} \
            php-fpm=${{ env.DOCKER_IMAGE_PHP }}:${{ steps.version.outputs.tag }} \
            -n ${{ env.K8S_NAMESPACE }} \
            --record
          echo "‚úÖ Deployment updated"

      # üîü Wait for rollout
      - name: Wait for rollout to complete
        run: |
          echo "‚è≥ Waiting for rollout to complete..."
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} \
            -n ${{ env.K8S_NAMESPACE }} \
            --timeout=10m
          echo "‚úÖ Rollout completed successfully"

      # 1Ô∏è‚É£1Ô∏è‚É£ Run post-deployment tasks
      - name: Run post-deployment tasks
        run: |
          echo "üõ†Ô∏è Running post-deployment tasks..."

          # Get pod name
          POD=$(kubectl get pods -n ${{ env.K8S_NAMESPACE }} \
            -l app=${{ env.DEPLOYMENT_NAME }} \
            -o jsonpath='{.items[0].metadata.name}')

          echo "üì¶ Pod: $POD"

          # Clear and cache config
          echo "  ‚Üí Clearing config cache..."
          kubectl exec -n ${{ env.K8S_NAMESPACE }} $POD -c php-fpm -- php artisan config:clear

          echo "  ‚Üí Caching config..."
          kubectl exec -n ${{ env.K8S_NAMESPACE }} $POD -c php-fpm -- php artisan config:cache

          echo "  ‚Üí Caching routes..."
          kubectl exec -n ${{ env.K8S_NAMESPACE }} $POD -c php-fpm -- php artisan route:cache

          echo "  ‚Üí Caching views..."
          kubectl exec -n ${{ env.K8S_NAMESPACE }} $POD -c php-fpm -- php artisan view:cache

          # Run migrations
          echo "  ‚Üí Running central migrations..."
          kubectl exec -n ${{ env.K8S_NAMESPACE }} $POD -c php-fpm -- php artisan migrate --force

          echo "  ‚Üí Running tenant migrations..."
          kubectl exec -n ${{ env.K8S_NAMESPACE }} $POD -c php-fpm -- php artisan tenants:migrate --force

          echo "‚úÖ Post-deployment tasks completed"

      # 1Ô∏è‚É£2Ô∏è‚É£ Show deployment status
      - name: ‚úÖ Deployment complete
        run: |
          echo "============================================="
          echo "‚úÖ Deployment completed successfully!"
          echo "============================================="
          echo ""
          echo "üì¶ Deployed version: ${{ steps.version.outputs.tag }}"
          echo ""
          echo "üìä Current deployment status:"
          kubectl get deployment ${{ env.DEPLOYMENT_NAME }} -n ${{ env.K8S_NAMESPACE }}
          echo ""
          echo "üìã Running pods:"
          kubectl get pods -n ${{ env.K8S_NAMESPACE }} -l app=${{ env.DEPLOYMENT_NAME }}
          echo ""
          echo "üåê Application available at: https://tavira.com.co"
          echo "============================================="
